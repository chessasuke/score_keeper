# name: Flutter_Android

# on:
  # push:
  #   branches: [master]
  # pull_request:
  #   branches: [master]

on: push
name: Release app bundle

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.5'
          channel: 'stable'

      - name: Create the Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.SCORE_KEEPER_KEYSTORE }}
        run: |
          # import keystore from secrets
          echo $KEYSTORE_BASE64 | base64 -d > $RUNNER_TEMP/my_production.keystore

      - run: flutter pub get
      - run: flutter build appbundle --release

      - name: Sign Android App Bundle
        run: jarsigner -keystore $RUNNER_TEMP/my_production.keystore -storepass ${{ secrets.SCORE_KEEPER_PARAPHRASE }} -keypass ${{ secrets.SCORE_KEEPER_PARAPHRASE }} -sigalg SHA256withRSA -digestalg SHA-256 -signedjar build/app/outputs/bundle/release/app-release-signed.aab build/app/outputs/bundle/release/*.aab my_production_alias

      - name: Publish Android Artefacts
        uses: actions/upload-artifact@v1
        with:
          name: release-aab-signed
          path: build/app/outputs/bundle/release/app-release-signed.aab

# on: push
# name: Test, Build and Release apk
# jobs:
#   build:
#     name: Build APK
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v1
#       with:
#         java-version: '12.x'
#     - uses: subosito/flutter-action@v2
#       with:
#         flutter-version: '3.0.5'
#         channel: 'stable'
#     - run: flutter pub get
#     - run: flutter test
#     - run: flutter build apk --debug --split-per-abi
#     - name: Create a Release APK
#       uses: ncipollo/release-action@v1
#       with:
#         artifacts: "build/app/outputs/apk/debug/*.apk"
#         token: ${{ secrets.TOKEN }}